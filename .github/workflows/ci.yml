name: CI

on:
  push:
    branches: [develop, main]
  pull_request:

jobs:
  test-build-deploy:
    runs-on: ubuntu-latest
    services:
      docker:
        image: docker:23.0.6-dind
        options: --privileged

    steps:
      # ---------- 0. 拉代码 ----------
      - name: Checkout
        uses: actions/checkout@v4

      # ---------- 1. Node & 依赖缓存 ----------
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20      # 可改成 18
          cache: 'npm'
      - name: Install Dependencies
        run: npm ci --frozen-lockfile

      # ---------- 2. 单元测试 (Vitest) ----------
      - name: Unit Test
        run: npm test

      # ---------- 3. 安装浏览器 + E2E (Playwright) ----------
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps chromium
      - name: E2E Test
        run: npm run test:e2e

      # ---------- 4. Lighthouse 性能基线 ----------
      - name: Build Production Bundle
        run: NITRO_PRESET=node-server npm run build
      - name: Lighthouse autorun
        run: npx lhci autorun --upload.outputDir=lhci-report
      - name: Upload LH Report
        uses: actions/upload-artifact@v4
        with:
          name: lighthouse-report
          path: lhci-report/**
          if-no-files-found: error

      # ---------- 5. Build & Push Docker ----------
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}
      - name: Build & Push Image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          tags: ${{ secrets.DOCKER_USER }}/nuxt3-enterprise:latest
          push: true

      # ---------- 6. 部署到 Vercel ----------
      - name: Deploy to Vercel (prod)
        uses: amondnet/vercel-action@v25
        with:
          vercel-token:      ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id:     ${{ secrets.VERCEL_ORG }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT }}
          working-directory: .
          vercel-args: '--prod --confirm'
